apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-base-deployment
  namespace: devops
  labels:
    app: backend-base
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend-base
  template:
    metadata:
      labels:
        app: backend-base
    spec:
      containers:
      - name: backend-base
        image: localhost:8082/backend-base:latest
        ports:
        - containerPort: 3001
        env:
        - name: USERNAME
          valueFrom:
            configMapKeyRef:
              name: backend-base-config
              key: username
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: backend-base-secret
              key: api-key

---
apiVersion: v1
kind: Service
metadata:
  name: backend-base-service
  namespace: devops
spec:
  selector:
    app: backend-base
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3001
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-base-ingress
  namespace: devops
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: backend-base.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend-base-service
            port:
              number: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-base-config
  namespace: devops
data:
  username: "your-username"  # Reemplaza con tu valor de nombre de usuario

---
apiVersion: v1
kind: Secret
metadata:
  name: backend-base-secret
  namespace: devops
type: Opaque
data:
  api-key: <base64-encoded-api-key>  # Reemplaza con tu API_KEY codificado en base64
